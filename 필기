아이디어 분석
- 시장 분석
- 게임 시작의 특정(창조적인 아이디어 기반. 디지털 기술 기반)
- 사용자 분석
  - 인구 통계(성별, 나이, 직업군)
 - 경쟁자 분석[경쟁사와의 차별점을 만들어 시장에서의 우위를 점위하게끔 아이디어를 개선]
  - 경쟁 게임의 장단점
 - 분석용 정보 획득[정보 수집간에 있어서 불필요한 정보를 걸러내야함]
  - 통계청, 한국콘텐츠진흥원 [대한민국게임백서를 참조하는 편도 나쁘진 않음]
  - KPI(Key Performance Indicator)
   - 매출, DAU(Daily Active Users), MAU(Monthly Active Users), 전환율
평가
- 게임 메커니즘 : 게임의 규칙은 어떤가? 목표는 어떤가?
- 구현 기술
- 미적요소(그래픽, 사운드. 스토리)
- 게임 공간(월드, 세계관)[월드단위의 규모*ex)맵의 크기, 세계관 내의 구성요소의 최대치]
- 차별화요소
- 게임 재미 요소 [가장 쉽게 접근 가능하고 비교적 빠르고 쉽게 얻을 수 있는 도파민의 획득처]
  - 욕구 충족, 성취감, 자극, 몰입, 감정이입[매슬로의 욕구실현이론]
					{자아실현 욕구<존경 욕구<애정/소속 욕구<안전 욕구<생리적 욕구} 우선순위의 욕구가 충족되면					그 이상의 것을 누리고 싶어한다는 이론
  - 의미있는 선택 제공 (리스크에 따른 선택) *ex) 디트로이트 비컴 휴먼
  - 해당 요소의 재미, 그 재미요소를 다른 회사가 사용하지 않는 이유, 구현 가능성여부
- 게임 세션 길이
  - 게임의 특성에 맞게끔 적절히 설정해야함.
- 게임 레벨 디자인
  - 맵 디자인.
  - 선형 구조, 평면 구조 등등
- (게임 내)자원
  - 화폐[경화(Hard Currency, 외부의 경로(캐쉬)로 획득 가능한 재화), 연화(soft Currency, 인게임 수급이 가능한 재화)]{연화의 경우 통제가 어려운편														연화의 소모처를 마련하여 													통제하는 편이 가장 대중적인 방안(ex: 가챠)}
  - 에너지(ex: 피로도 시스템)
  - 아이템
  - 병목구간[연화의 수급속도를 늦추면서 경화의 사용을 유도]
- 밸런스
  - 학습곡선(배우기는 쉽고 마스터하기는 어려운 곡선이 이상적)
  - 대칭은 밸런스는 완벽하지만 게임이 단조로워진다.
  - 우월전략은 발생시키면 안된다.[게임의 다양성 파괴]
stack(스택) 메모리
- 함수가 실행될 때 기본적으로 확보되는 메모리[먼저 들어간 것이 나중에 나온다]
- 크기가 상대적으로 작은 편
- 함수 실행 코드, 함수 파라메터, 지역변수[함수 내부에 선언하는 것들 )ex: int, ]
- 위치가 정해져 있어서 사용하는데 속도가 빠른 편
heap(힙) 메모리
- 컴퓨터에 남아있는 램
- 크기는 보통 무한으로 처리
- 동적 (프로그래 실행중) 할당용도로 사용(new)[동적 할당은 자주 할수록 손해] / 정적(프로그램 실행 전)
- 속도가 느림 / 


C#의 데이터 타입
- 값 타입 (Value Type) 
  - 스택메모리에 저장
  - unmanaged type
  - 깊은 복사 [전체를 넘겨줌] / 복사속도가 느림 / 완전한 사본을 가지게 됨
  - struct
- 참조 타입(Reference Type)
  - 힙 메모리에 저장
  - managed type / 가비지 컬렉팅 : 할당한 메모리를 알아서 해지해주는것 [가비지 콜렉팅이 된다]
  - 얕은 복사 [위치주소(참조)만 넘겨줌] / 복사속도가 빠름 / 
  - class


피벗 : 중심점을 잡아두는 일, 사물을 특정 좌표에 기준하여 잡아둘 때 그 기준을 잡기위해 편한 위치의 좌표를 잡아 중심으로 고정한다
트랜스폼 : 부모 자식간의 연결을 해두게 되면 부몬의 움직임은 자식에게 영향을 주지만 그 반대는 작동이 되지 않음
