[게임 알고리즘]
 1) 좌표계
- 위치를 표현하는데 사용하는 체계
- 데카르트 좌표계

좌표계 축의 방향에 따른 분류
- 왼손 좌표계 :  Window 기반(directX)
- 오른손 좌표계 : 수학쪽, 오픈소스진영(OpenGL, 3D Max)

원점 기준에 따른 분류
- 로컬 좌표계 : 자신의 원점 기준으로 한 좌표계
- 월드 좌표계 : 월드의 원점을 기준으로 한 좌표계
- 월드 변환(World Transform) : 오브젝트를 월드에 배치하는 작업(위치, 회전, 스케일 적용)

스크린 좌표계
- 디스플레이 기준
- Unity는 원점을 왼쪽 아래로 삼음

랜더링 파이프라인
- 로컬변환->월드변환->카메라변환->투영변환->레스터라이즈

벡터(Vector)
- 위치와 벡터는 다르다.
- 더하기 : 각 x, y, z를 더해서 새로운 x,y,z,를 만드낟.
- 곱하기 : 벡터 * 벡터, 백터ㅁ 벡터, 벡터 * 스칼라

외적(Cross Product): 두 벡터가 만드는 평면에 수직한 벡터를 생성한다.                                                                                                                                                                                                                                                                                                    
내적(Dot Product) : 두 벡터의 사이각을 구할 수 있다.                                                                                                                           
행렬
- 단위행렬 : 다른 행렬에 곱해도 다른 행렬에 변화가 없는 행렬

비트연산
- 비트끼리 계산하는 것
- & : 둘다 1일때만 1, 아니면 0 [특정 비트에 1을 ]
- | : 둘 중 하나면 1이면 1, 아니면 0 [특정 비트에 1을 세팅하기 위해 사용]
- << : 레프트 쉬프트. 비트를 왼쪽으로 지정된 숫자만큼 옮기기, 한번 쉬프트할 때마다 수가 2배가 된다. | ex) 3 << 2 = 12
- >> : 라이트 쉬프트. 비트를 오른쪽으로 지정된 숫자만큼 옮기기, 한번 쉬프트 할 때마다 수가 ½배가 된다.
						[다른 나누기 연산과는 달리 비트를 한칸 옮기는것이라 비교적 연산이 빠른편에 속함]

Frustum(사각 절두체)[사각뿔에서 상부 머리를 제거한 형태]
- 카메라가 3D 월드에서 실제로 촬영하는 영역
- 상부 머리의 평면부[near plane], 하부 바닥의 평면부[far plane]
- FOV[Field Of View] : 카메라 화각
Camera
- Position: 카메라의 위치
- LookAt : 카메라가 바라보는 방향
- Up : 카메라의 위쪽 방향

3D모델
- 정점(Vertex) : 점(위치)
- 간선(Edge) : 정점과 정점을 잇는 선
- 삼각형(Polygon) : 정저 3개로 만들어지는 삼각형
- 면(Face) : 삼각형이 모여서 만드는 평면
- 메시(Mesh) : 3D 모델링 하나 (전체 외형)

보간(Interporation
- 시작값과 도착값과 전체 진행시간 중 어느 정도가 경과했는지를 알면 현재 쥐편, 영양 여햑
